name: CI - AuditGuard

on:
  push:
    paths:
      - "shadows/auditguard/**"
  pull_request:
    paths:
      - "shadows/auditguard/**"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shadows/auditguard

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black formatting check
        run: black . --check --diff

      - name: Run Flake8 linting
        run: flake8 . --max-line-length=88 --extend-ignore=E203

      - name: Run Bandit security check
        run: bandit -r . -f json -o bandit-report.json || true

      - name: Run tests
        run: |
          pytest tests/ -v --cov=. --cov-report=xml

  sonarcloud:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: shadows/auditguard

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java (required for SonarCloud)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}

  build:
    needs: [test, sonarcloud]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: shadows/auditguard

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/shadow-link-industries/auditguard:latest
            ghcr.io/shadow-link-industries/auditguard:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout manifests
        uses: actions/checkout@v4
        with:
          path: manifests

      - name: Update image tag in manifests
        run: |
          cd manifests
          sed -i "s|ghcr.io/shadow-link-industries/auditguard:latest|ghcr.io/shadow-link-industries/auditguard:${{ github.sha }}|g" LinkOps-Manifests/shadows/auditguard/deployment.yaml

      - name: Commit and push changes
        run: |
          cd manifests
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update auditguard image to ${{ github.sha }}" || exit 0
          git push 