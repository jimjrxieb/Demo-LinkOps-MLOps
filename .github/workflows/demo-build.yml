name: Build and Push Demo Images

on:
  push:
    branches: [main, demo]
    paths:
      - 'mlops/**'
      - 'frontend/**'
      - 'shadows/**'
      - 'docker-compose.yml'
      - '.github/workflows/demo-build.yml'
  pull_request:
    branches: [main, demo]
    paths:
      - 'mlops/**'
      - 'frontend/**'
      - 'shadows/**'
      - 'docker-compose.yml'
      - '.github/workflows/demo-build.yml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'latest'
      push:
        description: 'Push to registry'
        required: true
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME_PREFIX: demo
  DOCKER_USERNAME: linksrobot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event.inputs.push == true || github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_CRED }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=${{ github.event.inputs.tag || 'latest' }},enable=true

      - name: Build and push Whis Data Input
        uses: docker/build-push-action@v5
        with:
          context: ./mlops/whis_data_input
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-data-input:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Whis Sanitize
        uses: docker/build-push-action@v5
        with:
          context: ./mlops/whis_sanitize
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-sanitize:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Whis Logic
        uses: docker/build-push-action@v5
        with:
          context: ./mlops/whis_logic
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-logic:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Ficknury Evaluator
        uses: docker/build-push-action@v5
        with:
          context: ./shadows/ficknury_evaluator
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-ficknury-evaluator:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-frontend:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push MLOps Platform
        uses: docker/build-push-action@v5
        with:
          context: ./mlops/mlops_platform
          push: ${{ github.event.inputs.push == true || github.event_name == 'push' }}
          tags: >-
            ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-mlops-platform:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Helm values with registry
        if: github.event.inputs.push == true || github.event_name == 'push'
        run: |
          sed -i "s|repository: demo-|repository: ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/demo-|g" helm/demo-stack/values.yaml
          echo "Updated Helm values with registry: ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/"

      - name: Commit updated Helm values
        if: github.event.inputs.push == true || github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add helm/demo-stack/values.yaml
          git commit -m "Update Helm values with registry images" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Output image tags
        run: |
          echo "Built images with tag: ${{ steps.meta.outputs.version }}"
          echo "Registry: ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/"
          echo "Images:"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-data-input:${{ steps.meta.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-sanitize:${{ steps.meta.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-whis-logic:${{ steps.meta.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-ficknury-evaluator:${{ steps.meta.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-frontend:${{ steps.meta.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME_PREFIX }}-mlops-platform:${{ steps.meta.outputs.version }}"
