networks:
  linkops-network:
    driver: bridge

services:
  ### üóÑÔ∏è POSTGRESQL
  db:
    image: postgres:15
    container_name: linkops-postgres
    ports:
    - "5432:5432"
    environment:
    POSTGRES_DB: linkops
      POSTGRES_USER: linkops
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-linkops_password}
    volumes:
    - postgres_data:/var/lib/postgresql/data
    healthcheck:
    test: ["CMD-SHELL", "pg_isready -U linkops"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
    - linkops-network

  ### üîß MLOPS PLATFORM (FastAPI)
  mlops_platform:
    build:
    context: ./mlops/mlops_platform
    container_name: linkops-mlops-platform
    ports:
    - "8000:8000"
    volumes:
    - ./mlops/mlops_platform:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - REDIS_URL=redis://redis:6379
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - redis
    - kafka
    healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
    - linkops-network

  ### üß† FRONTEND (Vue Dev Server)
  frontend:
    build:
    context: ./frontend
    container_name: linkops-frontend
    ports:
    - "3000:3000"
    volumes:
    - ./frontend:/app
    - /app/node_modules
    environment:
    - CHOKIDAR_USEPOLLING=true
    - WATCHPACK_POLLING=true
    - VITE_API_BASE_URL=http://localhost:8000
    command: sh -c "npm install && npm run dev -- --host"
    depends_on:
    - mlops_platform
    networks:
    - linkops-network

  ### ü¶Å ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: linkops-zookeeper
    ports:
    - "2181:2181"
    environment:
    ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
    - zookeeper_data:/var/lib/zookeeper/data
    - zookeeper_logs:/var/lib/zookeeper/log
    healthcheck:
    test: ["CMD-SHELL", "echo ruok | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
    - linkops-network

  ### üî¥ REDIS (Caching & Session Store)
  redis:
    image: redis:7-alpine
    container_name: linkops-redis
    ports:
    - "6379:6379"
    volumes:
    - redis_data:/data
    healthcheck:
    test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
    - linkops-network

  ### üì° KAFKA (Zookeeper Mode)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: linkops-kafka
    ports:
    - "9092:9092"
    environment:
    KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
    - zookeeper
    volumes:
    - kafka_data:/var/lib/kafka/data
    healthcheck:
    test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
    - linkops-network

  ### üì• WHIS DATA INPUT SERVICE
  whis_data_input:
    build: ./mlops/whis_data_input
    container_name: linkops-whis-data-input
    ports:
    - "8001:8000"
    volumes:
    - ./mlops/whis_data_input:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üßπ WHIS SANITIZE SERVICE
  whis_sanitize:
    build: ./mlops/whis_sanitize
    container_name: linkops-whis-sanitize
    ports:
    - "8002:8000"
    volumes:
    - ./mlops/whis_sanitize:/app
    - ./data_lake:/app/data_lake
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üî® WHIS SMITHING SERVICE
  whis_smithing:
    build: ./mlops/whis_smithing
    container_name: linkops-whis-smithing
    ports:
    - "8003:8000"
    volumes:
    - ./mlops/whis_smithing:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üöÄ WHIS ENHANCE SERVICE
  whis_enhance:
    build: ./mlops/whis_enhance
    container_name: linkops-whis-enhance
    ports:
    - "8004:8000"
    volumes:
    - ./mlops/whis_enhance:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key-for-testing}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üß† WHIS LOGIC SERVICE
  whis_logic:
    build: ./mlops/whis_logic
    container_name: linkops-whis-logic
    ports:
    - "8005:8000"
    volumes:
    - ./mlops/whis_logic:/app
    - ./data_lake:/app/data_lake
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üï∑Ô∏è WHIS WEBSCRAPER SERVICE
  whis_webscraper:
    build: ./mlops/whis_webscraper
    container_name: linkops-whis-webscraper
    ports:
    - "8006:8000"
    volumes:
    - ./mlops/whis_webscraper:/app
    - ./logs:/app/logs
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üîç AUDIT ASSESS SERVICE
  audit_assess:
    build: ./mlops/audit_assess
    container_name: linkops-audit-assess
    ports:
    - "8007:8000"
    volumes:
    - ./mlops/audit_assess:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    - GITGUARDIAN_API_KEY=${GITGUARDIAN_API_KEY:-dummy-key-for-testing}
    - SNYK_TOKEN=${SNYK_TOKEN:-dummy-token-for-testing}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üöÄ AUDIT MIGRATE SERVICE
  audit_migrate:
    build: ./mlops/audit_migrate
    container_name: linkops-audit-migrate
    ports:
    - "8008:8000"
    volumes:
    - ./mlops/audit_migrate:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üõ†Ô∏è MLOPS UTILS SERVICE
  mlops_utils:
    build: ./mlops/mlops_utils
    container_name: linkops-mlops-utils
    ports:
    - "8009:8000"
    volumes:
    - ./mlops/mlops_utils:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### ü§ñ JIMMIE LOGIC (Shadow Agent)
  jimmie_logic:
    build: ./shadows/jimmie_logic
    container_name: linkops-jimmie-logic
    ports:
    - "8010:8000"
    volumes:
    - ./shadows/jimmie_logic:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key-for-testing}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### ü§ñ FICKNURY EVALUATOR (Shadow Agent)
  ficknury_evaluator:
    build: ./shadows/ficknury_evaluator
    container_name: linkops-ficknury-evaluator
    ports:
    - "8011:8000"
    volumes:
    - ./shadows/ficknury_evaluator:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üõ°Ô∏è AUDIT LOGIC (Shadow Agent)
  audit_logic:
    build: ./shadows/audit_logic
    container_name: linkops-audit-logic
    ports:
    - "8012:8000"
    volumes:
    - ./shadows/audit_logic:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üõ°Ô∏è AUDITGUARD LOGIC (Shadow Agent)
  auditguard_logic:
    build: ./shadows/auditguard_logic
    container_name: linkops-auditguard-logic
    ports:
    - "8013:8000"
    volumes:
    - ./shadows/auditguard_logic:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### ‚ò∏Ô∏è KUBERNETES SPECIALIST (Shadow Agent)
  kubernetes_specialist:
    build: ./shadows/kubernetes_specialist
    container_name: linkops-kubernetes-specialist
    ports:
    - "8014:8000"
    volumes:
    - ./shadows/kubernetes_specialist:/app
    - ~/.kube:/root/.kube:ro
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    - KUBECONFIG=/root/.kube/config
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üß¨ ML DATA SCIENTIST (Shadow Agent)
  ml_data_scientist:
    build: ./shadows/ml_data_scientist
    container_name: linkops-ml-data-scientist
    ports:
    - "8015:8000"
    volumes:
    - ./shadows/ml_data_scientist:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üèóÔ∏è PLATFORM ENGINEER (Shadow Agent)
  platform_engineer:
    build: ./shadows/platform_engineer
    container_name: linkops-platform-engineer
    ports:
    - "8016:8000"
    volumes:
    - ./shadows/platform_engineer:/app
    - ~/.aws:/root/.aws:ro
    - ~/.azure:/root/.azure:ro
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy-key}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy-secret}
    - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

  ### üîß DEVOPS ENGINEER (Shadow Agent)
  devops_engineer:
    build: ./shadows/devops_engineer
    container_name: linkops-devops-engineer
    ports:
    - "8017:8000"
    volumes:
    - ./shadows/devops_engineer:/app
    environment:
    - DATABASE_URL=postgresql://linkops:${POSTGRES_PASSWORD:-linkops_password}@db:5432/linkops
    - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
    - db
    - kafka
    networks:
    - linkops-network

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:
  redis_data:
