version: "3.8"

services:
  ### üîß BACKEND (FastAPI)
  backend:
    build:
      context: ./backend
    container_name: linkops-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - kafka

  ### üß† FRONTEND (Vue Dev Server)
  frontend:
    build:
      context: ./frontend
    container_name: linkops-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: sh -c "npm install && npm run dev -- --host"
    depends_on:
      - backend

  ### ü¶Å ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: linkops-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  ### üì° KAFKA (Zookeeper Mode)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: linkops-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:
