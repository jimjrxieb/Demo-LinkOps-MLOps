apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "whis-logic.fullname" . }}
  labels:
    {{- include "whis-logic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "whis-logic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "whis-logic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "whis-logic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.secrets.openai.enabled }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.openai.secretName }}
                  key: {{ .Values.secrets.openai.secretKey }}
            {{- end }}
            {{- if .Values.secrets.database.enabled }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.database.secretName }}
                  key: database-url
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.volumes.data.enabled }}
            - name: data
              mountPath: {{ .Values.volumes.data.mountPath }}
            {{- end }}
            {{- if .Values.volumes.cache.enabled }}
            - name: cache
              mountPath: {{ .Values.volumes.cache.mountPath }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.volumes.data.enabled }}
        - name: data
          {{- if .Values.volumes.data.persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.data.persistentVolumeClaim.claimName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if .Values.volumes.cache.enabled }}
        - name: cache
          {{- if .Values.volumes.cache.emptyDir }}
          emptyDir: {}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }} 