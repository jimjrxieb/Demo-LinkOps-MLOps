{{- if .Values.services.frontend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.services.frontend.replicas }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        {{- include "linkops.labels" . | nindent 8 }}
      {{- with .Values.global.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.security.rbac.createServiceAccounts }}
      serviceAccountName: frontend-sa
      {{- end }}
      {{- with .Values.affinity.podAntiAffinity }}
      affinity:
        podAntiAffinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      containers:
      - name: frontend
        image: {{ .Values.global.imageRegistry }}/{{ .Values.global.imageRepository }}/{{ .Values.services.frontend.image }}:{{ .Values.global.imageTag }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.services.frontend.port }}
          protocol: TCP
        {{- if .Values.services.frontend.healthCheck }}
        livenessProbe:
          httpGet:
            path: {{ .Values.services.frontend.healthCheck.path }}
            port: {{ .Values.services.frontend.healthCheck.port }}
          initialDelaySeconds: {{ .Values.services.frontend.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.services.frontend.healthCheck.periodSeconds }}
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {{ .Values.services.frontend.healthCheck.path }}
            port: {{ .Values.services.frontend.healthCheck.port }}
          initialDelaySeconds: {{ .Values.services.frontend.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.services.frontend.healthCheck.periodSeconds }}
          timeoutSeconds: 5
          failureThreshold: 3
        {{- end }}
        {{- with .Values.services.frontend.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.global.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.services.frontend.resources | nindent 10 }}
        {{- with .Values.global.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: frontend-config
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: {{ .Values.services.frontend.port }}
    protocol: TCP
  selector:
    app: frontend

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
data:
  config.js: |
    window.LINKOPS_CONFIG = {
      mlopsPlatformUrl: '{{ .Values.services.frontend.env | pluck "value" | first | default "http://mlops-platform:8000" }}',
      auditAssessUrl: '{{ .Values.services.frontend.env | pluck "value" | last | default "http://audit-assess:8003" }}',
      whisDataInputUrl: '{{ .Values.services.frontend.env | pluck "value" | first | default "http://whis-data-input:8004" }}',
      whisEnhanceUrl: '{{ .Values.services.frontend.env | pluck "value" | last | default "http://whis-enhance:8007" }}'
    };

{{- if .Values.services.frontend.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
  {{- with .Values.services.frontend.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.services.frontend.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.services.frontend.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
{{- end }}

{{- if .Values.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}
{{- end }}

{{- if .Values.security.rbac.createServiceAccounts }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
{{- end }}

{{- if .Values.security.networkPolicies.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - ports:
    - protocol: TCP
      port: {{ .Values.services.frontend.port }}
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mlops-platform
    ports:
    - protocol: TCP
      port: 80
  - to:
    - podSelector:
        matchLabels:
          app: audit-assess
    ports:
    - protocol: TCP
      port: 80
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
{{- end }}

{{- end }} 
