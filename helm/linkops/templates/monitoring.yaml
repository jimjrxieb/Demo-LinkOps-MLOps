{{- if .Values.monitoring.prometheus.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.monitoring.prometheus.replicas }}
  selector:
    matchLabels:
    app: prometheus
  template:
    metadata:
    labels:
        app: prometheus
        {{- include "linkops.labels" . | nindent 8 }}
    spec:
    containers:
    - name: prometheus
        image: {{ .Values.monitoring.prometheus.image }}
        ports:
    - name: http
          containerPort: {{ .Values.monitoring.prometheus.port }}
          protocol: TCP
        args:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --storage.tsdb.retention.time=200h
    - --web.enable-lifecycle
        volumeMounts:
    - name: prometheus-config
          mountPath: /etc/prometheus
    - name: prometheus-data
          mountPath: /prometheus
        resources:
          {{- toYaml .Values.monitoring.prometheus.resources | nindent 10 }}
      volumes:
    - name: prometheus-config
        configMap:
          name: prometheus-config
    - name: prometheus-data
        {{- if .Values.monitoring.prometheus.persistence.enabled }}
        persistentVolumeClaim:
          claimName: prometheus-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.monitoring.prometheus.port }}
    targetPort: {{ .Values.monitoring.prometheus.port }}
    protocol: TCP
  selector:
    app: prometheus

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    {{- include "linkops.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
    scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
    - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

    - job_name: 'mlops-platform'
        static_configs:
          - targets: ['mlops-platform:8000']
        metrics_path: /metrics

    - job_name: 'audit-assess'
        static_configs:
          - targets: ['audit-assess:8003']
        metrics_path: /metrics

    - job_name: 'frontend'
        static_configs:
          - targets: ['frontend:80']
        metrics_path: /metrics

    - job_name: 'whis-data-input'
        static_configs:
          - targets: ['whis-data-input:8004']
        metrics_path: /metrics

    - job_name: 'whis-enhance'
        static_configs:
          - targets: ['whis-enhance:8007']
        metrics_path: /metrics

{{- if .Values.monitoring.prometheus.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
    storage: {{ .Values.monitoring.prometheus.persistence.size }}
  {{- if .Values.monitoring.prometheus.persistence.storageClass }}
  storageClassName: {{ .Values.monitoring.prometheus.persistence.storageClass }}
  {{- end }}
{{- end }}
{{- end }}

{{- if .Values.monitoring.grafana.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.monitoring.grafana.replicas }}
  selector:
    matchLabels:
    app: grafana
  template:
    metadata:
    labels:
        app: grafana
        {{- include "linkops.labels" . | nindent 8 }}
    spec:
    containers:
    - name: grafana
        image: {{ .Values.monitoring.grafana.image }}
        ports:
    - name: http
          containerPort: {{ .Values.monitoring.grafana.port }}
          protocol: TCP
        {{- with .Values.monitoring.grafana.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
    - name: grafana-data
          mountPath: /var/lib/grafana
    - name: grafana-config
          mountPath: /etc/grafana/provisioning
        resources:
          {{- toYaml .Values.monitoring.grafana.resources | nindent 10 }}
      volumes:
    - name: grafana-data
        {{- if .Values.monitoring.grafana.persistence.enabled }}
        persistentVolumeClaim:
          claimName: grafana-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
    - name: grafana-config
        configMap:
          name: grafana-config

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.monitoring.grafana.port }}
    targetPort: {{ .Values.monitoring.grafana.port }}
    protocol: TCP
  selector:
    app: grafana

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    {{- include "linkops.labels" . | nindent 4 }}
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
    type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true

  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
    orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

{{- if .Values.monitoring.grafana.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    {{- include "linkops.labels" . | nindent 4 }}
  {{- with .Values.monitoring.grafana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.monitoring.grafana.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.monitoring.grafana.ingress.host }}
    http:
    paths:
    - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: {{ .Values.monitoring.grafana.port }}
{{- end }}

{{- if .Values.monitoring.grafana.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    app: grafana
    {{- include "linkops.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
    storage: {{ .Values.monitoring.grafana.persistence.size }}
  {{- if .Values.monitoring.grafana.persistence.storageClass }}
  storageClassName: {{ .Values.monitoring.grafana.persistence.storageClass }}
  {{- end }}
{{- end }}
{{- end }} 
